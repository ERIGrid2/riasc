(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{110:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return f}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,f=u["".concat(o,".").concat(b)]||u[b]||d[b]||i;return n?a.a.createElement(f,c(c({ref:t},l),{},{components:n})):a.a.createElement(f,c({ref:t},l))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},91:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return s})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),i=(n(0),n(110)),o={id:"config",title:"Configuration File",sidebar_label:"Configuration",slug:"/setup/config"},c={unversionedId:"setup/config",id:"setup/config",isDocsHomePage:!1,title:"Configuration File",description:"Each RIasC agent node can be configured by a YAML configuration file.",source:"@site/docs/setup/config.md",slug:"/setup/config",permalink:"/riasc/docs/setup/config",editUrl:"https://github.com/ERIGrid2/riasc/edit/master/docs/setup/config.md",version:"current",sidebar_label:"Configuration",sidebar:"docs",previous:{title:"Cloud-init",permalink:"/riasc/docs/setup/agent/cloud-init"},next:{title:"Usage",permalink:"/riasc/docs/usage"}},s=[{value:"Location",id:"location",children:[]},{value:"Example",id:"example",children:[]}],l={toc:s};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Each RIasC agent node can be configured by a ",Object(i.b)("a",{parentName:"p",href:"https://yaml.org/"},"YAML")," configuration file.\nThis configuration file is used by the agent node to register itself in the RIasC cloud."),Object(i.b)("h2",{id:"location"},"Location"),Object(i.b)("p",null,"For ",Object(i.b)("a",{parentName:"p",href:"/riasc/docs/setup/agent/rpi"},"Raspberry Pi-based installations")," the configuration file must be placed at ",Object(i.b)("inlineCode",{parentName:"p"},"/boot/riasc.yaml")," or the ",Object(i.b)("inlineCode",{parentName:"p"},"boot")," drive when the SD card is mounted in Windows."),Object(i.b)("p",null,"For ",Object(i.b)("a",{parentName:"p",href:"/riasc/docs/setup/agent/manual"},"manual installations")," via the script expect the configuration file named ",Object(i.b)("inlineCode",{parentName:"p"},"riasc.yaml")," in the current working directory."),Object(i.b)("p",null,"For ",Object(i.b)("a",{parentName:"p",href:"/riasc/docs/setup/agent/cloud-init"},"cloud-init installations")," the contents of configuration file must be provided as instance metadata](",Object(i.b)("a",{parentName:"p",href:"https://cloudinit.readthedocs.io/en/latest/topics/instancedata.html"},"https://cloudinit.readthedocs.io/en/latest/topics/instancedata.html"),")."),Object(i.b)("h2",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},'# A unique hostname to identify the node\nhostname: rpi-rwth-1\n\n# A secret token which is used by the RIasC node to register itself with the K3S master node\ntoken: XXXX\n\n# The address of an K3S master node at which the node should be registered\nserver: https://riasc.fein-aachen.org\n\nansible:\n  # Extra arguments which will be passed to ansible-pull\n  extra_args: ""\n\n  # The ansible playbook which is used for provisioning this node\n  playbook: "site.yml"\n\n  # Additional variables which are passed to the Ansible playbook for provisioning\n  variables: {}\n')))}p.isMDXComponent=!0}}]);