(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{113:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var b=a.a.createContext({}),p=function(e){var t=a.a.useContext(b),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return a.a.createElement(b.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,m=u["".concat(c,".").concat(d)]||u[d]||s[d]||i;return r?a.a.createElement(m,o(o({ref:t},b),{},{components:r})):a.a.createElement(m,o({ref:t},b))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=d;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:n,c[1]=o;for(var b=2;b<i;b++)c[b]=r[b];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},85:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return o})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),i=(r(0),r(113)),c={id:"time-sync",title:"Time Synchronization",sidebar_label:"Time Synchronization",slug:"/usage/time-sync"},o={unversionedId:"usage/time-sync",id:"usage/time-sync",isDocsHomePage:!1,title:"Time Synchronization",description:"Requriements",source:"@site/docs/usage/time-sync.md",slug:"/usage/time-sync",permalink:"/docs/usage/time-sync",editUrl:"https://github.com/ERIGrid2/riasc/edit/master/docs/usage/time-sync.md",version:"current",sidebar_label:"Time Synchronization",sidebar:"docs",previous:{title:"Rancher Web Interface",permalink:"/docs/usage/rancher"},next:{title:"Examples",permalink:"/docs/examples"}},l=[{value:"Requriements",id:"requriements",children:[]},{value:"Setup",id:"setup",children:[]},{value:"Configuration",id:"configuration",children:[{value:"Configuring Linux PPS device on Raspberry Pi",id:"configuring-linux-pps-device-on-raspberry-pi",children:[]}]}],b={toc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"requriements"},"Requriements"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"1x GPS receiver module with PPS output",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Options:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://www.digikey.com/en/products/detail/adafruit-industries-llc/746/5353613"},"Adafruit Ultimate GPS Breakout, Digikey")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://store.uputronics.com/index.php?route=product/product&path=60_64&product_id=81"},"Raspberry Pi Hat, Uputronics")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"https://de.rs-online.com/web/p/raspberry-pi-hats-und-add-ons/1245481/?cm_mmc=de-ds-_-web-_-ds%3Adiscover-de%3Aall-technologies-de%3Araspberry-pi-de%3Aadd-gps-time-and-location-to-a-raspberry-pi-project-de_fp-_-1245481"},"Adafruit GPS Hat, RS-Online")))))),Object(i.b)("li",{parentName:"ul"},"1x GPS antenna and cabeling (optional)")),Object(i.b)("h2",{id:"setup"},"Setup"),Object(i.b)("p",null,"For accurate network latency measurements the Raspberry Pi clock can be sychronized via GPS.\nFor this purpose a dedicated GPS receiver module with a dedicated pulse-per-second (PPS) output is required."),Object(i.b)("p",null,"Connect the GPS receiver according to the following table:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:"left"},"Pin GPS Module"),Object(i.b)("th",{parentName:"tr",align:"left"},"Raspberry Pi P1 Header"),Object(i.b)("th",{parentName:"tr",align:"left"},"BCM"),Object(i.b)("th",{parentName:"tr",align:"left"},"Direction"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"GND"),Object(i.b)("td",{parentName:"tr",align:"left"},"6 (GND)"),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"3.3V"),Object(i.b)("td",{parentName:"tr",align:"left"},"1 (+3V3)"),Object(i.b)("td",{parentName:"tr",align:"left"}),Object(i.b)("td",{parentName:"tr",align:"left"})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"RX"),Object(i.b)("td",{parentName:"tr",align:"left"},"8"),Object(i.b)("td",{parentName:"tr",align:"left"},"GPIO 14 / TXD0"),Object(i.b)("td",{parentName:"tr",align:"left"},"RPi -> GPS")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"TX"),Object(i.b)("td",{parentName:"tr",align:"left"},"10"),Object(i.b)("td",{parentName:"tr",align:"left"},"GPIO 15 / RXD0"),Object(i.b)("td",{parentName:"tr",align:"left"},"GPS -> RPi")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:"left"},"PPS"),Object(i.b)("td",{parentName:"tr",align:"left"},"12"),Object(i.b)("td",{parentName:"tr",align:"left"},"GPIO 18"),Object(i.b)("td",{parentName:"tr",align:"left"},"GPS -> RPi")))),Object(i.b)("h2",{id:"configuration"},"Configuration"),Object(i.b)("p",null,"The time synchronzation is configured via the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/ERIGrid2/charts/tree/master/charts/riasc/templates/time-sync"},"RIasC Helm chart"),".\nIt is automatically enabled for all nodes."),Object(i.b)("h3",{id:"configuring-linux-pps-device-on-raspberry-pi"},"Configuring Linux PPS device on Raspberry Pi"),Object(i.b)("p",null,"The configuration of the PPS inputs on a Raspberry Pi is done by the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/ERIGrid2/riasc-ansible/tree/master/roles/rpi-gps-sync"},"RIasC Ansible playbook"),".\nIt will be applied to all Raspberry Pi based nodes."))}p.isMDXComponent=!0}}]);