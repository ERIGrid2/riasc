"use strict";(self.webpackChunkriasc=self.webpackChunkriasc||[]).push([[8654],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=i,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return r?n.createElement(h,o(o({ref:t},c),{},{components:r})):n.createElement(h,o({ref:t},c))}));function d(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},9758:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return u}});var n=r(7462),i=r(3366),a=(r(7294),r(3905)),o=["components"],l={id:"network-emulation",title:"Network emulation (netem) CNI-plugin for Kubernetes",sidebar_label:"Network Emulation",sidebar_position:4,slug:"/design/network-emulation",partners:["vtt","rwth"]},s=void 0,p={unversionedId:"design/network-emulation",id:"design/network-emulation",title:"Network emulation (netem) CNI-plugin for Kubernetes",description:"Facts",source:"@site/docs/design/network-emulation.md",sourceDirName:"design",slug:"/design/network-emulation",permalink:"/docs/design/network-emulation",editUrl:"https://github.com/ERIGrid2/riasc/edit/master/docs/design/network-emulation.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"network-emulation",title:"Network emulation (netem) CNI-plugin for Kubernetes",sidebar_label:"Network Emulation",sidebar_position:4,slug:"/design/network-emulation",partners:["vtt","rwth"]},sidebar:"docs",previous:{title:"Time Synchronization",permalink:"/docs/design/time-sync"},next:{title:"Network Monitoring",permalink:"/docs/design/network-monitoring"}},c=[{value:"Facts",id:"facts",children:[],level:2},{value:"Introduction",id:"introduction",children:[{value:"Features",id:"features",children:[],level:3}],level:2},{value:"Employed technologies",id:"employed-technologies",children:[],level:2},{value:"Controllers",id:"controllers",children:[{value:"Builtin",id:"builtin",children:[],level:3},{value:"Flexe (VTT Network Emulator)",id:"flexe-vtt-network-emulator",children:[],level:3}],level:2},{value:"Example",id:"example",children:[{value:"Example Profile",id:"example-profile",children:[],level:3},{value:"Example Pod",id:"example-pod",children:[],level:3}],level:2},{value:"Architecture",id:"architecture",children:[],level:2},{value:"Implementation details",id:"implementation-details",children:[{value:"Installation",id:"installation",children:[],level:3},{value:"Custom Resources",id:"custom-resources",children:[],level:3},{value:"Mutating Admission Webhook",id:"mutating-admission-webhook",children:[],level:3},{value:"Sidecar Container",id:"sidecar-container",children:[],level:3}],level:2},{value:"Further reading",id:"further-reading",children:[],level:2}],m={toc:c};function u(e){var t=e.components,r=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"facts"},"Facts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Git Repo:")," ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ERIGrid2/k8s-netem"},"https://github.com/ERIGrid2/k8s-netem")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Helm Chart:")," ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ERIGrid2/charts/tree/master/charts/netem"},"https://github.com/ERIGrid2/charts/tree/master/charts/netem")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"State:")," under development")),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"k8s-netem")," adds traffic control to Kubernetes pods."),(0,a.kt)("p",null,"It allows the user to configure one or more traffic profiles to impair network traffic between pods in the cluster and between pods and external networks."),(0,a.kt)("p",null,"The traffic profiles are implemented as a custom resource (CR) which the user can add and modify in the Kubernetes database using standard tools like ",(0,a.kt)("inlineCode",{parentName:"p"},"kubectl")," or a Kubernetes web-interface."),(0,a.kt)("p",null,"These, ",(0,a.kt)("em",{parentName:"p"},"TrafficProfiles")," can use ",(0,a.kt)("inlineCode",{parentName:"p"},"podSelectors")," or CIDRs to match a set of source and destination pods/networks for which the impairment should be configured.\nIn addition the impairment can be restricted to a set of UDP or TCP port numbers."),(0,a.kt)("p",null,"The traffic profile custom resource is heavily inspired by Kubernetes NetworkPolicy CR."),(0,a.kt)("h3",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Network emulation and rate limiting"),(0,a.kt)("li",{parentName:"ul"},"Support for ingress and egress traffic"),(0,a.kt)("li",{parentName:"ul"},"Requires no modification of existing manifests"),(0,a.kt)("li",{parentName:"ul"},"Matches cross-pod flows and from/to CIDRs"),(0,a.kt)("li",{parentName:"ul"},"Complex ingress/egress filters inspired by ",(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/services-networking/network-policies/"},"Kubernete's network policies")),(0,a.kt)("li",{parentName:"ul"},"Live filter updates based on ",(0,a.kt)("inlineCode",{parentName:"li"},"podSelectors")),(0,a.kt)("li",{parentName:"ul"},"Support for multiple traffic controllers")),(0,a.kt)("h2",{id:"employed-technologies"},"Employed technologies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Linux:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://man7.org/linux/man-pages/man8/tc.8.html"},"Traffic control")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://wiki.linuxfoundation.org/networking/netem"},"Netem")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://ipset.netfilter.org/"},"IPsets")))),(0,a.kt)("li",{parentName:"ul"},"Kubernetes:",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/"},"Custom Resources")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/"},"Mutating Admission Webhook"))))),(0,a.kt)("h2",{id:"controllers"},"Controllers"),(0,a.kt)("p",null,"Currently ",(0,a.kt)("em",{parentName:"p"},"k8s-netem")," supports two types of controllers:"),(0,a.kt)("h3",{id:"builtin"},"Builtin"),(0,a.kt)("p",null,"The builtin TC controller uses ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.linuxfoundation.org/networking/iproute2"},"iproute2"),"'s ",(0,a.kt)("inlineCode",{parentName:"p"},"tc")," command to configure Linux's traffic control subsystem by adding Qdiscs and filters."),(0,a.kt)("h3",{id:"flexe-vtt-network-emulator"},"Flexe (VTT Network Emulator)"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("h3",{id:"example-profile"},"Example Profile"),(0,a.kt)("h3",{id:"example-pod"},"Example Pod"),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"User creates a new ",(0,a.kt)("em",{parentName:"li"},"TrafficProfile")," CR"),(0,a.kt)("li",{parentName:"ol"},"User creates one or more ",(0,a.kt)("em",{parentName:"li"},"Pods")," which match the ",(0,a.kt)("inlineCode",{parentName:"li"},"podSelector")," of the ",(0,a.kt)("em",{parentName:"li"},"TrafficProfile")," CR"),(0,a.kt)("li",{parentName:"ol"},"A mutating addmission webhook will inject a Sidecar container into the newly created ",(0,a.kt)("em",{parentName:"li"},"Pods")),(0,a.kt)("li",{parentName:"ol"},"The sidecar container will configure the network traffic controller by:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Watching for new/modified ",(0,a.kt)("em",{parentName:"li"},"TrafficProfile")," matching the ",(0,a.kt)("inlineCode",{parentName:"li"},"podSelector")),(0,a.kt)("li",{parentName:"ol"},"Watching for new/modified ",(0,a.kt)("em",{parentName:"li"},"Pods")," which match the ingress/egress peers ",(0,a.kt)("inlineCode",{parentName:"li"},"podSelector"),"s",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"New matching ",(0,a.kt)("em",{parentName:"li"},"Pods")," will be added to IPsets"),(0,a.kt)("li",{parentName:"ul"},"Previously matching ",(0,a.kt)("em",{parentName:"li"},"Pods")," which have been deleted will be removed from the IPsets."))),(0,a.kt)("li",{parentName:"ol"},"Configuring the traffic impairment by cnofiguring one or more netem Qdiscs and attaching them to their dedicated IPsets filters.")))),(0,a.kt)("h2",{id:"implementation-details"},"Implementation details"),(0,a.kt)("h3",{id:"installation"},"Installation"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"k8s-netem")," is deployed by the Riasc Helm chart."),(0,a.kt)("h3",{id:"custom-resources"},"Custom Resources"),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"k8s-netem")," defines a new CRD k8s-netem.riasc.eu/v1/trafficprofiles."),(0,a.kt)("h3",{id:"mutating-admission-webhook"},"Mutating Admission Webhook"),(0,a.kt)("p",null,"The mutating admission webhooks gets invoked by the Kubernetes API server for each created, modified or deleted ",(0,a.kt)("em",{parentName:"p"},"Pod")," resource."),(0,a.kt)("p",null,"The webhook will check if any of the existing ",(0,a.kt)("em",{parentName:"p"},"TrafficProfiles")," targets the ",(0,a.kt)("em",{parentName:"p"},"Pod"),".\nIf this is the case, an additional sidecar container will be injected into the ",(0,a.kt)("em",{parentName:"p"},"Pod"),"."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Note:")," Currently, the webhook will only inject the sidecar if the ",(0,a.kt)("em",{parentName:"p"},"TrafficProfile")," already exists at the time of the ",(0,a.kt)("em",{parentName:"p"},"Pod")," creation or update. ",(0,a.kt)("em",{parentName:"p"},"k8s-netem")," will not re-create ",(0,a.kt)("em",{parentName:"p"},"Pods")," (or use ephermal contaienrs) after a new ",(0,a.kt)("em",{parentName:"p"},"TrafficProfile")," is added to the cluster. It is the responsibility to re-create ",(0,a.kt)("em",{parentName:"p"},"Pods")," in order for the side-cards to be injected."),(0,a.kt)("h3",{id:"sidecar-container"},"Sidecar Container"),(0,a.kt)("p",null,"The sidecar container will run alongside the user containers for the full life-cycle of the ",(0,a.kt)("em",{parentName:"p"},"Pod"),".\nIt is tasked with the sychronization of ",(0,a.kt)("em",{parentName:"p"},"TrafficProfiles")," with the Kernel TC / IPset datastructures."),(0,a.kt)("p",null,"This means, modifications of existing ",(0,a.kt)("em",{parentName:"p"},"TrafficProfiles")," by the user (e.g. to adjust impairment parameters) are synced to the Linux kernel configuration."),(0,a.kt)("p",null,"At the same time the sidecar container will watch for new or deleted ",(0,a.kt)("em",{parentName:"p"},"Pods")," which match the ingres/egress peer podSelectors and add their podIPs to the respective IPsets which are used by the TC filters."),(0,a.kt)("h2",{id:"further-reading"},"Further reading"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.altoros.com/blog/kubernetes-networking-writing-your-own-simple-cni-plug-in-with-bash/"},"https://www.altoros.com/blog/kubernetes-networking-writing-your-own-simple-cni-plug-in-with-bash/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://networkop.co.uk/post/2018-11-k8s-topo-p1/"},"https://networkop.co.uk/post/2018-11-k8s-topo-p1/")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/networkop/k8s-topo"},"k8s-topo"))))}u.isMDXComponent=!0}}]);