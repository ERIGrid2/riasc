"use strict";(self.webpackChunkriasc=self.webpackChunkriasc||[]).push([[4556],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),m=i,g=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},u),{},{components:n})):r.createElement(g,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},6759:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return u},default:function(){return p}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"ip-gateway",title:"IP-Gateway/NAT for cluster-external devices",sidebar_label:"IP-Gateway/NAT",sidebar_position:2,slug:"/design/ip-gateway",partners:["rwth"]},c=void 0,s={unversionedId:"design/ip-gateway",id:"design/ip-gateway",title:"IP-Gateway/NAT for cluster-external devices",description:"Facts",source:"@site/docs/design/ip-gateway.md",sourceDirName:"design",slug:"/design/ip-gateway",permalink:"/docs/design/ip-gateway",editUrl:"https://github.com/ERIGrid2/riasc/edit/master/docs/design/ip-gateway.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"ip-gateway",title:"IP-Gateway/NAT for cluster-external devices",sidebar_label:"IP-Gateway/NAT",sidebar_position:2,slug:"/design/ip-gateway",partners:["rwth"]},sidebar:"docs",previous:{title:"Overlay Network",permalink:"/docs/design/ip-overlay"},next:{title:"Time Synchronization",permalink:"/docs/design/time-sync"}},u=[{value:"Facts",id:"facts",children:[],level:2},{value:"Introduction",id:"introduction",children:[],level:2},{value:"Employed technologies",id:"employed-technologies",children:[],level:2},{value:"Architecture",id:"architecture",children:[],level:2},{value:"Implementation details",id:"implementation-details",children:[],level:2},{value:"Further Reading",id:"further-reading",children:[],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"facts"},"Facts"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Git Repo:")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Helm Chart:")," ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/ERIGrid2/charts/tree/master/charts/multus"},"https://github.com/ERIGrid2/charts/tree/master/charts/multus")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"State:")," in design phase")),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"As outlined in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/design/ip-overlay"},"IP overlay network")," design document, Kubernetes networking only facilicates communication between containers inside the cloud.\nThe ",(0,a.kt)("em",{parentName:"p"},"IP gateway")," component extends the Kubernetes networking concept to enable IP communication with cluster-external devices and services.\nThis is implemented by allocating a cluster-internal IP address to each external device.\nNetwork address translation is then used to establish the link between cluster-internal and -external addresses."),(0,a.kt)("h2",{id:"employed-technologies"},"Employed technologies"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/k8snetworkplumbingwg/multus-cni"},"multus CNI")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Network_address_translation"},"Network Address Translation"))),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("h2",{id:"implementation-details"},"Implementation details"),(0,a.kt)("h2",{id:"further-reading"},"Further Reading"))}p.isMDXComponent=!0}}]);