(self.webpackChunkriasc=self.webpackChunkriasc||[]).push([[6971],{21269:function(e,t,n){"use strict";n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var i=n(87462),r=n(63366),a=(n(67294),n(3905)),o=n(93456),s=["components"],l={id:"index",title:"Introduction",sidebar_label:"\ud83d\udc4b Introduction",slug:"/",sidebar_position:1},c=void 0,u={unversionedId:"index",id:"index",title:"Introduction",description:"RIasC, an acronym for Research Infrastructure as Code, is a framework to accelerate distributed Research Infrastructure (RI) experiments.",source:"@site/docs/index.md",sourceDirName:".",slug:"/",permalink:"/riasc/docs/",editUrl:"https://github.com/ERIGrid2/riasc/edit/master/docs/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"index",title:"Introduction",sidebar_label:"\ud83d\udc4b Introduction",slug:"/",sidebar_position:1},sidebar:"docs",next:{title:"\u2728 Getting started",permalink:"/riasc/docs/getting-started/"}},p={},d=[{value:"Functions",id:"functions",level:2},{value:"Provisioning of Mobile Units",id:"provisioning-of-mobile-units",level:3},{value:"Deployment of Containerized Software Components",id:"deployment-of-containerized-software-components",level:3},{value:"Transparent Inter-laboratory Overlay Network",id:"transparent-inter-laboratory-overlay-network",level:3},{value:"Time Synchronization",id:"time-synchronization",level:3},{value:"Network Emulation",id:"network-emulation",level:3},{value:"Network Monitoring",id:"network-monitoring",level:3},{value:"Worklow",id:"worklow",level:2},{value:"Architecture",id:"architecture",level:2},{value:"Services",id:"services",level:3},{value:"Concept",id:"concept",level:3},{value:"Kubernetes",id:"kubernetes",level:4},{value:"Operators",id:"operators",level:4},{value:"Credits",id:"credits",level:2}],m={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,i.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"RIasC, an acronym for ",(0,a.kt)("strong",{parentName:"p"},"R"),"esearch ",(0,a.kt)("strong",{parentName:"p"},"I"),"nfrastructure ",(0,a.kt)("strong",{parentName:"p"},"as")," ",(0,a.kt)("strong",{parentName:"p"},"C"),"ode, is a framework to accelerate distributed Research Infrastructure (RI) experiments."),(0,a.kt)("p",null,"Inspired by the Infrastructure-as-Code paradigm it achieves this by a high degree of automation of common tasks in a research environment such as:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Rapid deployment of controllers and other services in a research/laboratory cloud"),(0,a.kt)("li",{parentName:"ul"},"Network setup and VPN configuration"),(0,a.kt)("li",{parentName:"ul"},"Logging of research data"),(0,a.kt)("li",{parentName:"ul"},"Formalization and declarative description of research experiments"),(0,a.kt)("li",{parentName:"ul"},"Emulation and monitoring of communication network characteristics")),(0,a.kt)("p",null,"Infrastructure as code (IaC) is the process of managing and provisioning computer data-centers through machine-readable definition files, rather than physical hardware configuration or interactive configuration tools.\nThe IT infrastructure managed by this process comprises both physical equipment, such as bare-metal servers, as well as virtual machines, and associated configuration resources.\nThe definitions may be in a version control system.\nIt can use either scripts or declarative definitions, rather than manual processes, but the term is more often used to promote declarative approaches."),(0,a.kt)("p",null,"RIasC realizes this by utilizing existing cloud-computing technologies and applying them in a research environment."),(0,a.kt)("h2",{id:"functions"},"Functions"),(0,a.kt)("p",null,"RIasC provides the following functionalities to accelerate distributed Research Infrastructure (RI) experiments."),(0,a.kt)("h3",{id:"provisioning-of-mobile-units"},"Provisioning of Mobile Units"),(0,a.kt)("p",null,"A mobile unit in RIasC's terminology is a mobile computing device acting as a gateway between laboratory equipment and other possible remote laboratories.\nThe setup and maintenance updates of the units is handled by RIasC to alleviate the researcher from a manual setup of these devices."),(0,a.kt)("h3",{id:"deployment-of-containerized-software-components"},"Deployment of Containerized Software Components"),(0,a.kt)("p",null,"The mobile units run a Linux operating system and join a Kubernetes cluster which is consists of all the mobile units.\nThis Kubernetes clusters allows the research to declaratively describe the setup of software components which are executed as containerized applications on the cluster."),(0,a.kt)("h3",{id:"transparent-inter-laboratory-overlay-network"},"Transparent Inter-laboratory Overlay Network"),(0,a.kt)("p",null,"Research of highly complex systems such as for example todays energy systems is increasingly undertaken by a group of researchers and institutions.\nConsequently, it is desirably to perform distributed experiments spanning multiple laboratories.\nRIasC simplifies the setup of such distributed setups by providing a transparent IP overlay network between all participating laboratories."),(0,a.kt)("h3",{id:"time-synchronization"},"Time Synchronization"),(0,a.kt)("p",null,"For geographically distributed real-time simulation (GD-RTS) a common time-base is required in order to synchronize the simulation of coupled subsystems as well as the proper temporal alignment of simulation results.\nA time-synchronization service provides this common time-base by synchronizing the clock of each mobile-unit via one of the supported synchronization sources.\nThe RIasC time-synchronization currently supports the Global Positioning System (GPS), the Network Time Protocol (NTP) or the Precision Time Protocol (PTP) as synchronization sources."),(0,a.kt)("h3",{id:"network-emulation"},"Network Emulation"),(0,a.kt)("p",null,"Network emulation allows for a realistic emulation of real-world network characteristics.\nRIasC provides a network emulation service which allows the researcher to declaratively describe desired network parameters such as communication delay, packet loss, throughput etc."),(0,a.kt)("h3",{id:"network-monitoring"},"Network Monitoring"),(0,a.kt)("p",null,"I a geographically distributed experiment which possible spans across multiple laboratories, network charactersitics are also affected by the communication link between the sites.\nIn many cases this is the public Internet and/or the national research networks.\nThese networks are shared mediums and as such can exhibit congestion and unpredictable latencies and packet loss.\nRIasC aims at counteract these effects by providing a network monitoring service which monitors the network conditions between a configurable set of mobile-units.\nIn a similar manner as the network emulation configuration, these scheduling of these monitoring tests can be configured declaratively."),(0,a.kt)("h2",{id:"worklow"},"Worklow"),(0,a.kt)(o.Mermaid,{config:{},chart:"graph TD\n    Start --\x3e Stop",mdxType:"Mermaid"}),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,"The following figure illustrates an exemplary setup of RIasC."),(0,a.kt)("figure",{align:"center"},(0,a.kt)("img",{alt:"Architecture",src:"/img/architecture.svg",width:"90%"}),(0,a.kt)("figcaption",null,"Architecture.")),(0,a.kt)("p",null,"In this case three laboratories are coupled via a distributed Kubernetes cloud.\nRIasC uses K3S as its Kubernetes distribution which is optimized for lightweight deployments on ",(0,a.kt)("em",{parentName:"p"},"edge")," devices which run the K3S ",(0,a.kt)("em",{parentName:"p"},"agent")," process.\nIn our case we also refer to the ",(0,a.kt)("em",{parentName:"p"},"agent")," nodes as ",(0,a.kt)("em",{parentName:"p"},"mobile units (MU)"),".\nEach laboratory hosts one or more ",(0,a.kt)("em",{parentName:"p"},"mobile units")," which automatically join them self into the cloud."),(0,a.kt)("p",null,"To deploy a mobile unit an existing desktop or server workstation could be used.\nBut also more lightweight single board computers like the Raspberry can be used."),(0,a.kt)("p",null,"The requirements for running a K3S ",(0,a.kt)("em",{parentName:"p"},"agent")," are relatively low.\nBoth Intel/AMD x86 and ARM architectures supported.\nK3S has no other external dependencies besides the Linux kernel.\nThis is a main factor to simplify the whole deployment of new nodes."),(0,a.kt)("p",null,"Please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/riasc/docs/setup/agent"},"agent setup")," for more information."),(0,a.kt)("h3",{id:"services"},"Services"),(0,a.kt)("p",null,"RIasC relies on a collection of existing software tools and projects.\nIt combines these tools by providing reference examples and configurations benefiting researchs by a simpler and approachable access to cloud technologies."),(0,a.kt)("p",null,"Currently to following existing tools are deployed by RIasC:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://kubernetes.io/"},"Kubernetes"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"http://k3s.io/"},"K3S")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/squat/kilo"},"Kilo"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://wireguard.com/"},"Wireguard")))))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://wiki.linuxfoundation.org/networking/netem"},"Linux traffic control / netem")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://fein-aachen.org/projects/villas-framework/"},"VILLASframework")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.mdpi.com/1996-1073/10/3/374/htm"},"Power System Automation Language(PSAL)"))),(0,a.kt)("figure",{align:"center"},(0,a.kt)("img",{alt:"Software Stack",src:"/img/stack.png",width:"90%"}),(0,a.kt)("figcaption",null,"Software Stack.")),(0,a.kt)("h3",{id:"concept"},"Concept"),(0,a.kt)("h4",{id:"kubernetes"},"Kubernetes"),(0,a.kt)("figure",{align:"center"},(0,a.kt)("img",{alt:"Kubernetes Cluster",src:"/img/kubernetes_cluster.png",width:"70%"}),(0,a.kt)("figcaption",null,"Kubernetes Cluster.")),(0,a.kt)("h4",{id:"operators"},"Operators"),(0,a.kt)("figure",{align:"center"},(0,a.kt)("img",{alt:"Kubernetes Operators",src:"/img/operator.png",width:"90%"}),(0,a.kt)("figcaption",null,"Kubernetes Operators.")),(0,a.kt)("figure",{align:"center"},(0,a.kt)("img",{alt:"Operator Reconciliation",src:"/img/reconciliation.png",width:"70%"}),(0,a.kt)("figcaption",null,"Operator Reconciliation.")),(0,a.kt)("h2",{id:"credits"},"Credits"),(0,a.kt)("p",null,"RIasC is developed as part of the ",(0,a.kt)("a",{parentName:"p",href:"https://erigrid2.eu"},"European H2020 project ERIGrid 2.0"),' in the work package JRA2.2 "Real-time coupling and HIL approaches".\nContributing partners are:'),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Insitute for Automation of Complex Power Systems (ACS) at RWTH Aachen University"),(0,a.kt)("li",{parentName:"ul"},"Austrian Institute for Technology (AIT)"),(0,a.kt)("li",{parentName:"ul"},"VTT Technical Research Centre of Finland Ltd.")))}h.isMDXComponent=!0},11748:function(e,t,n){var i={"./locale":89234,"./locale.js":89234};function r(e){var t=a(e);return n(t)}function a(e){if(!n.o(i,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return i[e]}r.keys=function(){return Object.keys(i)},r.resolve=a,e.exports=r,r.id=11748}}]);